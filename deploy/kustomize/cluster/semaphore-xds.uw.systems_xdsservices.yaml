---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: xdsservices.semaphore-xds.uw.systems
spec:
  group: semaphore-xds.uw.systems
  names:
    kind: XdsService
    listKind: XdsServiceList
    plural: xdsservices
    shortNames:
    - xdssvc
    singular: xdsservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.service.name
      name: Service
      type: string
    - jsonPath: .spec.loadBalancing.policy
      name: Lb_Policy
      type: string
    - jsonPath: .spec.enableRemoteEndpoints
      name: Remote_Endpoints
      type: string
    - jsonPath: .spec.priorityStrategy
      name: Priority_Strategy
      type: string
    - jsonPath: .spec.retry.retryOn
      name: Retry_On
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          XdsService is the Schema for the XdsService of semaphore-xds controller. An
          XdsService is defined as the configuration used to construct a service that
          is served via the xDS server implemented by semaphore-xds to load balance
          traffic to GRPC endpoints.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: XdsServiceSpec defines the desired config for a service served
              via xDS
            properties:
              enableRemoteEndpoints:
                default: false
                description: |-
                  EnableRemoteEndpoints determines whether this Service should look for
                  endpoints (EndpointSlices) in remote clusters.
                type: boolean
              loadBalancing:
                default:
                  policy: round_robin
                description: |-
                  LoadBalancing specidies the load balancer configuration to be passed
                  to xDS clients.
                properties:
                  policy:
                    default: round_robin
                    description: Policy is the name of the load balancing policy to
                      be used
                    type: string
                  ringHash:
                    description: RingHash configures the ring hash when the policy
                      is set to ring_hash
                    properties:
                      headers:
                        description: |-
                          Request headers that will be used to obtain the hash key.
                          If the header is not present, no hash will be produced.
                        items:
                          type: string
                        type: array
                      maximumRingSize:
                        description: |-
                          Maximum hash ring size. Limited to 8M entries, but can be lowered
                          to further constrain resource use.
                        format: int64
                        type: integer
                      minimumRingSize:
                        description: |-
                          Minimum hash ring size. The larger the ring is the better the request distribution
                          will reflect the desired weights.
                        format: int64
                        type: integer
                    type: object
                type: object
              priorityStrategy:
                default: none
                description: |-
                  PriorityStrategy determines the strategy to follow when assigning
                  priorities to endpoints. Possible values are `none` and `local-first`
                enum:
                - none
                - local-first
                type: string
              retry:
                description: Retry specifies the retry policy for the service.
                properties:
                  backoff:
                    default:
                      baseInterval: 25ms
                      maxInterval: 250ms
                    description: Specifies parameters that control exponential retry
                      back off.
                    properties:
                      baseInterval:
                        default: 25ms
                        description: Specifies the base interval between retries.
                        type: string
                      maxInterval:
                        default: 250ms
                        description: Specifies the maximum interval between retries.
                        type: string
                    type: object
                  numRetries:
                    default: 1
                    description: Number of retries that will be attempted.
                    format: int32
                    type: integer
                  retryOn:
                    description: |-
                      Specifies the conditions under which retry takes place.
                      By default this is empty, which means retries are disabled.
                    items:
                      type: string
                    type: array
                type: object
              service:
                description: Service determines the Service resource to target
                properties:
                  name:
                    description: Name is the name of the Kubernetes Service to target
                    type: string
                required:
                - name
                type: object
            required:
            - service
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
